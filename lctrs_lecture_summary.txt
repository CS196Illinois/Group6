Manual Lecture Summary: CS 196, Introduction to Bash, Lecture 1The instructors for this class are Rohan Suresh and Sami Alqadi. The goals for today are to go over class logistics, go over what is Bash and what we will do with it, and understand Bash setup for different operating systems. Communication is through Piazza and Discord. Bash is a text only interface which can be used for controlling unix based operating system. Bash is a standardized way of interacting with the operating systems and its programs and standardization allows for easy automation/manipulation of many different tasks. There is virtually no setup for Linux or Mac, but for Windows one must install an Ubuntu Shell. Commands are unique statements that indicate specific tasks. Some commands need arguments which are further variables we provide to commands to execute a task. Flags are used to initialize commands behaviors. ls is used to list all files in the current directory, and the flag -a is used to list ALL files, including hidden ones. pwd is used to print the working directory. cd will let you change directory. Using cd and then starting the path with / will use an absolute path and cd .. will let you move up a directory. cat is used to display the contents of a file. touch is used to create a file in the current directory. rm is used to PERMANENTLY delete a file, and using the flag -rf with delete a file and its underlying components. BE CAREFUL WITH THIS. mkdir is used to create an empty directory. rmdir is used to delete an empty directory. mv is used to rename a file and/or move the file to a new location. cp will copy a file to a new location. man is used to bring up the manual for a command. Piping into files allows you to redirect output from the command line: > is used to redirect output, >> is used to append output to the file.Manual Lecture Summary: CS 196, Introduction to Bash, Lecture 2The objectives for today are to teach a few more commands in bash, go over logical operators, go over text editors, go through aliasing, and potentially (as a bonus) go through bash scripting. The sudo command is used to give the user root privileges, which are more or less administrator privileges. BE CAREFUL WITH THIS. sudo can delete important files. The echo command is used to print into Bash and is useful when determining errors within long commands. The find command is a powerful command used to locate files, and it can be used with the -name flag followed by a file to find the path to specific files and the -delete flag to delete found files. The grep command is used to search for text and return matching lines in a given file, using the -w flag will return exact matches, and using the -i flag will make the search case insensitive. The diff command is used to compare two files line by line and identify the lines where they differ. && is an and logical operator and lets you do commands sequentially. II is an or logical operator, and it will try the first command and if it fails, it will do the second. The ssh command is used to log into and do operations on a remote machine. There are many different text editors in Bash. vim is a terminal editor which opens in command mode with many keys. You can use -i to enter insert mode. In order to exit vim, you need to return back to command mode. Another text editor is known as emacs, which is similar to vim. The important keys are ctrl, the meta key, and esc which are combined with a variety of different keys. Another text editor is nano. Aliasing is a tool used to create bash shortcuts. Scripting is used within bash. You can run scripts by typing bash followed by script name dot sh. You can create a variable by declaring it and choosing a variable name. -eq is an equals operator for numerical comparisons and -ne is a not equals operator for numerical comparisons. “==” is an equals operator for Strings and “!=” is a not equals operator for Strings. Loops are useful. Functions are useful as well.Manual Lecture Summary: CS 196, Introduction to Python, Lecture 1The objectives for today are to get setup info, print hello world!, variables, conditionals, loops, functions, lists, and exception-handling. Python is a programming language. More specifically, it is an interpreted, object-oriented, high-level programming language with dynamic semantics. Python files have a .py extension. Object-oriented is a programming paradigm centered around the idea of using objects. Objects are abstract data types. Python is a high-level programming language. Pythonic code is a design choice to produce highly readable Python code. To create our first program, we create a .py file and run the script in bash with the command “python <file-name>.py>. Variables help us store stuff in programs. Dynamic typing in Python means that you don’t need to specify a variable type. None is a variable type used as an empty placeholder. Conditionals are an incredibly powerful way to let you make decisions in your code. The operators used are “==”, “!=”, “<=”, “>=”, “<”, “>”, “is”, and “in”. If we have more than two conditions, we use the elif statement. Loops allow us to repeatedly run the same section of code. The for loop uses the range function to establish how many times the loop will be run. The range function is inclusive at the start and exclusive at the end. The “in” operator can also be used in for loops. A list is not an array. The while loop says that while some statement is true, we run the code. To leave a loop early, we use the break keyword to break out of the current loop. Functions are blocks of code we plan on reusing. There is a specific format for functions. A function will return to the code that called it once it runs, and you can use the return keyword to manually leave a function. Lists are a collection which is ordered and changeable. Lists are simply arrays of bytes. When an error occurs in our program, Python will stop and send an error message. In order to handle these, we use exception handling with the try-except commands.Manual Lecture Summary: CS 196, Introduction to Python, Lecture 2 (issues here with how to summarize examples – might have to specify that)The objectives for today are to understand the review, Pythonic code, list comprehension, enumerate, sets, and dictionaries. The review covers variables, conditionals, loops, functions, and lists. Pythonic code is code that uses Python in the way it was intended to be used. Common commands and code in other languages can be condensed and made more effective in Python. Pythonic code can be used to find if something exists in an array, to find the sum of a list of numbers, etc. more effectively. Also, slicing is a useful piece of Pythonic code. List comprehensions are a classic Pythonic tool which allows you to create new lists from other lists. List comprehensions have an output expression, variable, input sequence, and an optional predicate. We can supercharge list comprehension with conditional logic. Another Pythonic tool is called enumerate which allows us to assign an index to values in a list. Enumerate is useful with loops. Now we will learn about data structures. Sets are unordered and unindexed data structures, with each value being unique. Sets are very fast when used as lookup tables. Sets have a function in ‘Math’ sets. To initialize a set, you say your variable is equal to set(). You use the .add() with the value you want to add. Sets have faster lookup times than arrays or lists. Dictionaries are another data structure. We can access elements by referencing keys. They use key-value pairs. These are very fast when used as a lookup table. Manual Lecture Summary: Colonies, Kathleen Young